import pandas as pd
df=pd.read_csv("/content/monthly_passengers.csv")

df.head(5)

passengers=df["value"].values.reshape(-1,1)
from sklearn.preprocessing import MinMaxScaler
scaler=MinMaxScaler(feature_range=(0,1))
passengers_scaled=scaler.fit_transform(passengers)

import numpy as np
X=[]
y=[]
window_size=12
for i in range(window_size,len(passengers_scaled)):
  X.append(passengers_scaled[i-window_size:i,0])
  y.append(passengers_scaled[i,0])
X=np.array(X)
y=np.array(y)
X=X.reshape(X.shape[0],X.shape[1],1)


print("X shape:", X.shape)
print("y shape:", y.shape)

import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense, LSTM


model=Sequential()
model.add(LSTM(50,activation="relu"))
model.add(Dense(1))
model.compile(
    optimizer="adam",
    loss="mse",
    metrics=["mae"]
)
model.summary()

model.fit(X,y,epochs=100,batch_size=16,verbose=1)

last_year=passengers_scaled[-window_size:]
last_year=last_year.reshape((1,window_size,1))
prediction=model.predict(last_year)
results=scaler.inverse_transform(prediction)
print("Results",results)

import matplotlib.pyplot as plt
actual=passengers[window_size:]
predicted_scaled=model.predict(X)
prediction=scaler.inverse_transform(predicted_scaled)
plt.figure(figsize=(10,7))
plt.plot(actual,label="actual")
plt.plot(prediction,label="Predicted")
plt.title("Passengers Model Performance")
plt.xlabel("Passengers")
plt.ylabel("Period")
plt.legend()
plt.show()
