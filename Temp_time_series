import numpy as np
import pandas as pd
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense, LSTM
from sklearn.preprocessing import MinMaxScaler
import matplotlib.pyplot as plt

df=pd.read_csv("/content/daily_temperature.csv")
df.head(5)

temperature=df["Temperature"].values.reshape(-1,1)
scaler=MinMaxScaler(feature_range=(0,1))
temp_scaled=scaler.fit_transform(temperature)

len(temperature)

#create the sequences
window_size=29
X=[]
y=[]
for i in range(window_size,len(temp_scaled)):
  X.append(temp_scaled[i-window_size:i,0])
  y.append(temp_scaled[i,0])
X=np.array(X)
y=np.array(y)
X=X.reshape(X.shape[0],X.shape[1],1)
print("X shape:", X.shape)
print("y shape:", y.shape)


model=Sequential()
model.add(LSTM(50,activation="relu",input_shape=(window_size,1)))
model.add(Dense(1))
model.compile(
    optimizer="adam",
    loss="mse",
    metrics=["mae"],
)
model.summary()

model.fit(X, y, epochs=50, batch_size=16)


last_30_days = temp_scaled[-window_size:]
last_30_days = last_30_days.reshape((1, window_size, 1))

predicted_scaled = model.predict(last_30_days)
predicted_temp = scaler.inverse_transform(predicted_scaled)

print("Predicted next day temperature:", predicted_temp[0][0])


predicted_scaled_all = model.predict(X)
predicted_all = scaler.inverse_transform(predicted_scaled_all)
real_all = temperature[window_size:]

plt.figure(figsize=(10,5))
plt.plot(real_all, label='Real Temperature')
plt.plot(predicted_all, label='Predicted Temperature')
plt.xlabel('Days')
plt.ylabel('Temperature')
plt.legend()
plt.show()
